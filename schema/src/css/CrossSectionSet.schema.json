{
  "$ref": "#/definitions/CrossSectionSetInput",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "CSL.CSLDate": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "circa": {
              "description": "If date is approximate, this should be set to a \"truthy\" value.",
              "type": "boolean"
            },
            "date-parts": {
              "items": {
                "items": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "maxItems": 3,
                "minItems": 1,
                "type": "array"
              },
              "maxItems": 2,
              "minItems": 1,
              "type": "array"
            },
            "literal": {
              "description": "Literal date string. Should only be used as a last resort.",
              "type": "string"
            },
            "raw": {
              "description": "May be used with Citeproc-js. String must be able to parse directly into a valid `Date` using `new Date()` **NOT A CSL STANDARD**",
              "type": "string"
            },
            "season": {
              "anyOf": [
                {
                  "const": 1,
                  "type": "number"
                },
                {
                  "const": 2,
                  "type": "number"
                },
                {
                  "const": 3,
                  "type": "number"
                },
                {
                  "const": 4,
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Three variants:      1.  1,   2,   3,   4  => spring, summer, fall, winter      2. \"1\", \"2\", \"3\", \"4\" => spring, summer, fall, winter      3.            string  => any literal string Spring, Summer, Fall, Winter"
            }
          },
          "required": [
            "date-parts"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "circa": {
              "description": "If date is approximate, this should be set to a \"truthy\" value.",
              "type": "boolean"
            },
            "date-parts": {
              "items": {
                "items": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "maxItems": 3,
                "minItems": 1,
                "type": "array"
              },
              "maxItems": 2,
              "minItems": 1,
              "type": "array"
            },
            "literal": {
              "description": "Literal date string. Should only be used as a last resort.",
              "type": "string"
            },
            "raw": {
              "type": "string"
            },
            "season": {
              "anyOf": [
                {
                  "const": 1,
                  "type": "number"
                },
                {
                  "const": 2,
                  "type": "number"
                },
                {
                  "const": 3,
                  "type": "number"
                },
                {
                  "const": 4,
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Three variants:      1.  1,   2,   3,   4  => spring, summer, fall, winter      2. \"1\", \"2\", \"3\", \"4\" => spring, summer, fall, winter      3.            string  => any literal string Spring, Summer, Fall, Winter"
            }
          },
          "required": [
            "raw"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "circa": {
              "description": "If date is approximate, this should be set to a \"truthy\" value.",
              "type": "boolean"
            },
            "date-parts": {
              "items": {
                "items": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "maxItems": 3,
                "minItems": 1,
                "type": "array"
              },
              "maxItems": 2,
              "minItems": 1,
              "type": "array"
            },
            "literal": {
              "type": "string"
            },
            "raw": {
              "description": "May be used with Citeproc-js. String must be able to parse directly into a valid `Date` using `new Date()` **NOT A CSL STANDARD**",
              "type": "string"
            },
            "season": {
              "anyOf": [
                {
                  "const": 1,
                  "type": "number"
                },
                {
                  "const": 2,
                  "type": "number"
                },
                {
                  "const": 3,
                  "type": "number"
                },
                {
                  "const": 4,
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Three variants:      1.  1,   2,   3,   4  => spring, summer, fall, winter      2. \"1\", \"2\", \"3\", \"4\" => spring, summer, fall, winter      3.            string  => any literal string Spring, Summer, Fall, Winter"
            }
          },
          "required": [
            "literal"
          ],
          "type": "object"
        }
      ]
    },
    "CSL.Data": {
      "additionalProperties": false,
      "properties": {
        "DOI": {
          "type": "string"
        },
        "ISBN": {
          "type": "string"
        },
        "ISSN": {
          "type": "string"
        },
        "PMCID": {
          "type": "string"
        },
        "PMID": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "abstract": {
          "type": "string"
        },
        "accessed": {
          "$ref": "#/definitions/CSL.CSLDate"
        },
        "annote": {
          "type": "string"
        },
        "archive": {
          "type": "string"
        },
        "archive-place": {
          "type": "string"
        },
        "archive_location": {
          "type": "string"
        },
        "author": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "authority": {
          "type": "string"
        },
        "call-number": {
          "type": "string"
        },
        "chapter-number": {
          "type": [
            "string",
            "number"
          ]
        },
        "citation-label": {
          "type": "string"
        },
        "citation-number": {
          "type": "string"
        },
        "collection-editor": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "collection-number": {
          "type": [
            "string",
            "number"
          ]
        },
        "collection-title": {
          "type": "string"
        },
        "composer": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "container": {
          "$ref": "#/definitions/CSL.CSLDate"
        },
        "container-author": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "container-title": {
          "type": "string"
        },
        "container-title-short": {
          "type": "string"
        },
        "dimensions": {
          "type": "string"
        },
        "director": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "edition": {
          "type": [
            "string",
            "number"
          ]
        },
        "editor": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "editorial-director": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "event": {
          "type": "string"
        },
        "event-date": {
          "$ref": "#/definitions/CSL.CSLDate"
        },
        "event-place": {
          "type": "string"
        },
        "first-reference-note-number": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "illustrator": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "interviewer": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "issue": {
          "type": [
            "string",
            "number"
          ]
        },
        "issued": {
          "$ref": "#/definitions/CSL.CSLDate"
        },
        "journalAbbreviation": {
          "type": "string"
        },
        "jurisdiction": {
          "type": "string"
        },
        "keyword": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "medium": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "number-of-pages": {
          "type": [
            "string",
            "number"
          ]
        },
        "number-of-volumes": {
          "type": [
            "string",
            "number"
          ]
        },
        "original-author": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "original-date": {
          "$ref": "#/definitions/CSL.CSLDate"
        },
        "original-publisher": {
          "type": "string"
        },
        "original-publisher-place": {
          "type": "string"
        },
        "original-title": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "page-first": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "publisher-place": {
          "type": "string"
        },
        "recipient": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "references": {
          "type": "string"
        },
        "reviewed-author": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "reviewed-title": {
          "type": "string"
        },
        "scale": {
          "type": "string"
        },
        "section": {
          "type": "string"
        },
        "shortTitle": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "submitted": {
          "$ref": "#/definitions/CSL.CSLDate"
        },
        "title": {
          "type": "string"
        },
        "title-short": {
          "type": "string"
        },
        "translator": {
          "items": {
            "$ref": "#/definitions/CSL.Person"
          },
          "type": "array"
        },
        "type": {
          "$ref": "#/definitions/CSL.ItemType"
        },
        "version": {
          "type": "string"
        },
        "volume": {
          "type": [
            "string",
            "number"
          ]
        },
        "year-suffix": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "type": "object"
    },
    "CSL.ItemType": {
      "enum": [
        "article",
        "article-journal",
        "article-magazine",
        "article-newspaper",
        "bill",
        "book",
        "broadcast",
        "chapter",
        "dataset",
        "entry",
        "entry-dictionary",
        "entry-encyclopedia",
        "figure",
        "graphic",
        "interview",
        "legal_case",
        "legislation",
        "manuscript",
        "map",
        "motion_picture",
        "musical_score",
        "pamphlet",
        "paper-conference",
        "patent",
        "personal_communication",
        "post",
        "post-weblog",
        "report",
        "review",
        "review-book",
        "song",
        "speech",
        "thesis",
        "treaty",
        "webpage"
      ],
      "type": "string"
    },
    "CSL.Person": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "dropping-particle": {
              "description": "Name particles that are dropped when only the surname is shown (\"van\" in \"Ludwig van Beethoven\", which becomes \"Beethoven\")",
              "type": "string"
            },
            "family": {
              "type": "string"
            },
            "given": {
              "description": "Given names, either full (\"John Edward\") or initialized (\"J. E.\")",
              "type": "string"
            },
            "literal": {
              "type": "string"
            },
            "non-dropping-particle": {
              "description": "Name particles that are not dropped when only the surname is shown (\"de\" in the Dutch surname \"de Koning\") but which may be treated separately from the family name, e.g. for sorting",
              "type": "string"
            },
            "sequence": {
              "enum": [
                "first",
                "additional"
              ],
              "type": "string"
            },
            "suffix": {
              "description": "Name suffix, e.g. \"Jr.\" in \"John Smith Jr.\" and \"III\" in \"Bill Gates III\"",
              "type": "string"
            }
          },
          "required": [
            "family"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "dropping-particle": {
              "description": "Name particles that are dropped when only the surname is shown (\"van\" in \"Ludwig van Beethoven\", which becomes \"Beethoven\")",
              "type": "string"
            },
            "family": {
              "description": "Surname minus any particles and suffixes",
              "type": "string"
            },
            "given": {
              "description": "Given names, either full (\"John Edward\") or initialized (\"J. E.\")",
              "type": "string"
            },
            "literal": {
              "type": "string"
            },
            "non-dropping-particle": {
              "description": "Name particles that are not dropped when only the surname is shown (\"de\" in the Dutch surname \"de Koning\") but which may be treated separately from the family name, e.g. for sorting",
              "type": "string"
            },
            "sequence": {
              "enum": [
                "first",
                "additional"
              ],
              "type": "string"
            },
            "suffix": {
              "description": "Name suffix, e.g. \"Jr.\" in \"John Smith Jr.\" and \"III\" in \"Bill Gates III\"",
              "type": "string"
            }
          },
          "required": [
            "literal"
          ],
          "type": "object"
        }
      ]
    },
    "CSParameters": {
      "additionalProperties": false,
      "properties": {
        "mass_ratio": {
          "type": "number"
        },
        "statistical_weight_ratio": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "CrossSection<string,string>": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Pair%3Cnumber%3E"
          },
          "type": "array"
        },
        "labels": {
          "$ref": "#/definitions/Pair%3Cstring%3E"
        },
        "parameters": {
          "$ref": "#/definitions/CSParameters"
        },
        "reaction": {
          "$ref": "#/definitions/Reaction%3Cstring%3E"
        },
        "reference": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "threshold": {
          "type": "number"
        },
        "type": {
          "const": "LUT",
          "type": "string"
        },
        "units": {
          "$ref": "#/definitions/Pair%3Cstring%3E"
        }
      },
      "required": [
        "data",
        "labels",
        "reaction",
        "threshold",
        "type",
        "units"
      ],
      "type": "object"
    },
    "CrossSectionInput<any>": {
      "additionalProperties": false,
      "properties": {
        "complete": {
          "type": "boolean"
        },
        "contributor": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "processes": {
          "items": {
            "$ref": "#/definitions/CrossSection%3Cstring%2Cstring%3E"
          },
          "type": "array"
        },
        "references": {
          "$ref": "#/definitions/Dict%3C(CSL.Data%7Cstring)%3E"
        },
        "states": {
          "$ref": "#/definitions/Dict%3CInState%3Cany%3E%3E"
        }
      },
      "required": [
        "complete",
        "contributor",
        "description",
        "name",
        "processes",
        "references",
        "states"
      ],
      "type": "object"
    },
    "CrossSectionSetInput": {
      "$ref": "#/definitions/CrossSectionInput%3Cany%3E"
    },
    "Dict<(CSL.Data|string)>": {
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/CSL.Data"
          },
          {
            "type": "string"
          }
        ]
      },
      "type": "object"
    },
    "Dict<InState<any>>": {
      "additionalProperties": {
        "$ref": "#/definitions/InState%3Cany%3E"
      },
      "type": "object"
    },
    "InState<any>": {
      "$ref": "#/definitions/State%3Cany%3E"
    },
    "Pair<number>": {
      "items": {
        "type": "number"
      },
      "maxItems": 2,
      "minItems": 2,
      "type": "array"
    },
    "Pair<string>": {
      "items": {
        "type": "string"
      },
      "maxItems": 2,
      "minItems": 2,
      "type": "array"
    },
    "Reaction<string>": {
      "additionalProperties": false,
      "properties": {
        "lhs": {
          "items": {
            "$ref": "#/definitions/ReactionEntry%3Cstring%3E"
          },
          "type": "array"
        },
        "reversible": {
          "type": "boolean"
        },
        "rhs": {
          "items": {
            "$ref": "#/definitions/ReactionEntry%3Cstring%3E"
          },
          "type": "array"
        },
        "type_tags": {
          "items": {
            "$ref": "#/definitions/ReactionTypeTag"
          },
          "type": "array"
        }
      },
      "required": [
        "lhs",
        "rhs",
        "reversible",
        "type_tags"
      ],
      "type": "object"
    },
    "ReactionEntry<string>": {
      "additionalProperties": false,
      "properties": {
        "count": {
          "type": "number"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "count",
        "state"
      ],
      "type": "object"
    },
    "ReactionTypeTag": {
      "enum": [
        "Elastic",
        "Effective",
        "Electronic",
        "Vibrational",
        "Rotational",
        "Attachment",
        "Ionization"
      ],
      "type": "string"
    },
    "State<any>": {
      "anyOf": [
        {
          "properties": {
            "charge": {
              "type": "number"
            },
            "particle": {
              "type": "string"
            }
          },
          "required": [
            "charge",
            "particle"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "charge": {
              "type": "number"
            },
            "particle": {
              "type": "string"
            }
          },
          "required": [
            "charge",
            "particle"
          ],
          "type": "object"
        }
      ]
    }
  }
}